[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "django.db",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db",
        "description": "django.db",
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "rest_framework",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "rest_framework",
        "description": "rest_framework",
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "permissions",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "serializers",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "status",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "mixins",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "generics",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "viewsets",
        "importPath": "rest_framework",
        "description": "rest_framework",
        "isExtraImport": true,
        "detail": "rest_framework",
        "documentation": {}
    },
    {
        "label": "obtain_auth_token",
        "importPath": "rest_framework.authtoken.views",
        "description": "rest_framework.authtoken.views",
        "isExtraImport": true,
        "detail": "rest_framework.authtoken.views",
        "documentation": {}
    },
    {
        "label": "rest_framework.decorators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "api_view",
        "importPath": "rest_framework.decorators",
        "description": "rest_framework.decorators",
        "isExtraImport": true,
        "detail": "rest_framework.decorators",
        "documentation": {}
    },
    {
        "label": "TokenObtainPairView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "TokenRefreshView",
        "importPath": "rest_framework_simplejwt.views",
        "description": "rest_framework_simplejwt.views",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.views",
        "documentation": {}
    },
    {
        "label": "Token",
        "importPath": "rest_framework.authtoken.models",
        "description": "rest_framework.authtoken.models",
        "isExtraImport": true,
        "detail": "rest_framework.authtoken.models",
        "documentation": {}
    },
    {
        "label": "Token",
        "importPath": "rest_framework.authtoken.models",
        "description": "rest_framework.authtoken.models",
        "isExtraImport": true,
        "detail": "rest_framework.authtoken.models",
        "documentation": {}
    },
    {
        "label": "RegisterUserSerializer",
        "importPath": "user_app.api.serializers",
        "description": "user_app.api.serializers",
        "isExtraImport": true,
        "detail": "user_app.api.serializers",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "Response",
        "importPath": "rest_framework.response",
        "description": "rest_framework.response",
        "isExtraImport": true,
        "detail": "rest_framework.response",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "user_app",
        "description": "user_app",
        "isExtraImport": true,
        "detail": "user_app",
        "documentation": {}
    },
    {
        "label": "RefreshToken",
        "importPath": "rest_framework_simplejwt.tokens",
        "description": "rest_framework_simplejwt.tokens",
        "isExtraImport": true,
        "detail": "rest_framework_simplejwt.tokens",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "post_save",
        "importPath": "django.db.models.signals",
        "description": "django.db.models.signals",
        "isExtraImport": true,
        "detail": "django.db.models.signals",
        "documentation": {}
    },
    {
        "label": "receiver",
        "importPath": "django.dispatch",
        "description": "django.dispatch",
        "isExtraImport": true,
        "detail": "django.dispatch",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "Review",
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "isExtraImport": true,
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "StreamPlatform",
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "isExtraImport": true,
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "WatchList",
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "isExtraImport": true,
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "Review",
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "isExtraImport": true,
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "StreamPlatform",
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "isExtraImport": true,
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "WatchList",
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "isExtraImport": true,
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "Review",
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "isExtraImport": true,
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "StreamPlatform",
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "isExtraImport": true,
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "WatchList",
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "isExtraImport": true,
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "*",
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "isExtraImport": true,
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "DefaultRouter",
        "importPath": "rest_framework.routers",
        "description": "rest_framework.routers",
        "isExtraImport": true,
        "detail": "rest_framework.routers",
        "documentation": {}
    },
    {
        "label": "APIView",
        "importPath": "rest_framework.views",
        "description": "rest_framework.views",
        "isExtraImport": true,
        "detail": "rest_framework.views",
        "documentation": {}
    },
    {
        "label": "ReviewSerializer",
        "importPath": "watchlist_app.api.serializers",
        "description": "watchlist_app.api.serializers",
        "isExtraImport": true,
        "detail": "watchlist_app.api.serializers",
        "documentation": {}
    },
    {
        "label": "StreamPlatformSerializer",
        "importPath": "watchlist_app.api.serializers",
        "description": "watchlist_app.api.serializers",
        "isExtraImport": true,
        "detail": "watchlist_app.api.serializers",
        "documentation": {}
    },
    {
        "label": "WatchListSerializer",
        "importPath": "watchlist_app.api.serializers",
        "description": "watchlist_app.api.serializers",
        "isExtraImport": true,
        "detail": "watchlist_app.api.serializers",
        "documentation": {}
    },
    {
        "label": "ValidationError",
        "importPath": "rest_framework.exceptions",
        "description": "rest_framework.exceptions",
        "isExtraImport": true,
        "detail": "rest_framework.exceptions",
        "documentation": {}
    },
    {
        "label": "IsAuthenticated",
        "importPath": "rest_framework.permissions",
        "description": "rest_framework.permissions",
        "isExtraImport": true,
        "detail": "rest_framework.permissions",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "django.core.validators",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "MinValueValidator",
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "isExtraImport": true,
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "MaxValueValidator",
        "importPath": "django.core.validators",
        "description": "django.core.validators",
        "isExtraImport": true,
        "detail": "django.core.validators",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "core.asgi",
        "description": "core.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "core.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = \"django-insecure-zan-$*+u51s@d#v56t%_-0u%e*=k_55^tba%y_83a($^+32b=k\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "SECRET_KEY = \"django-insecure-zan-$*+u51s@d#v56t%_-0u%e*=k_55^tba%y_83a($^+32b=k\"\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nINSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"rest_framework\",",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    \"django.contrib.admin\",\n    \"django.contrib.auth\",\n    \"django.contrib.contenttypes\",\n    \"django.contrib.sessions\",\n    \"django.contrib.messages\",\n    \"django.contrib.staticfiles\",\n    \"rest_framework\",\n    \"watchlist_app\",\n    \"rest_framework.authtoken\"",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "MIDDLEWARE = [\n    \"django.middleware.security.SecurityMiddleware\",\n    \"django.contrib.sessions.middleware.SessionMiddleware\",\n    \"django.middleware.common.CommonMiddleware\",\n    \"django.middleware.csrf.CsrfViewMiddleware\",\n    \"django.contrib.auth.middleware.AuthenticationMiddleware\",\n    \"django.contrib.messages.middleware.MessageMiddleware\",\n    \"django.middleware.clickjacking.XFrameOptionsMiddleware\",\n]\nROOT_URLCONF = \"core.urls\"",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "ROOT_URLCONF = \"core.urls\"\nTEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        \"BACKEND\": \"django.template.backends.django.DjangoTemplates\",\n        \"DIRS\": [],\n        \"APP_DIRS\": True,\n        \"OPTIONS\": {\n            \"context_processors\": [\n                \"django.template.context_processors.debug\",\n                \"django.template.context_processors.request\",\n                \"django.contrib.auth.context_processors.auth\",",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "WSGI_APPLICATION = \"core.wsgi.application\"\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\nDATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n# Password validation",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DATABASES = {\n    \"default\": {\n        \"ENGINE\": \"django.db.backends.sqlite3\",\n        \"NAME\": BASE_DIR / \"db.sqlite3\",\n    }\n}\n# Password validation\n# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators\nAUTH_PASSWORD_VALIDATORS = [\n    {",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.UserAttributeSimilarityValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.MinimumLengthValidator\",\n    },\n    {\n        \"NAME\": \"django.contrib.auth.password_validation.CommonPasswordValidator\",\n    },",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "LANGUAGE_CODE = \"en-us\"\nTIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "TIME_ZONE = \"UTC\"\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nREST_FRAMEWORK = {",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nREST_FRAMEWORK = {\n    # 'DEFAULT_AUTHENTICATION_CLASSES': [",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nREST_FRAMEWORK = {\n    # 'DEFAULT_AUTHENTICATION_CLASSES': [\n    #     'rest_framework.authentication.BasicAuthentication',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "STATIC_URL = \"static/\"\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nREST_FRAMEWORK = {\n    # 'DEFAULT_AUTHENTICATION_CLASSES': [\n    #     'rest_framework.authentication.BasicAuthentication',\n    # ],\n    'DEFAULT_AUTHENTICATION_CLASSES': [\n        # 'rest_framework.authentication.TokenAuthentication',",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = \"django.db.models.BigAutoField\"\nREST_FRAMEWORK = {\n    # 'DEFAULT_AUTHENTICATION_CLASSES': [\n    #     'rest_framework.authentication.BasicAuthentication',\n    # ],\n    'DEFAULT_AUTHENTICATION_CLASSES': [\n        # 'rest_framework.authentication.TokenAuthentication',\n         'rest_framework_simplejwt.authentication.JWTAuthentication',\n    ]\n}",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "REST_FRAMEWORK",
        "kind": 5,
        "importPath": "core.settings",
        "description": "core.settings",
        "peekOfCode": "REST_FRAMEWORK = {\n    # 'DEFAULT_AUTHENTICATION_CLASSES': [\n    #     'rest_framework.authentication.BasicAuthentication',\n    # ],\n    'DEFAULT_AUTHENTICATION_CLASSES': [\n        # 'rest_framework.authentication.TokenAuthentication',\n         'rest_framework_simplejwt.authentication.JWTAuthentication',\n    ]\n}",
        "detail": "core.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "core.urls",
        "description": "core.urls",
        "peekOfCode": "urlpatterns = [\n    path(\"admin/\", admin.site.urls),\n    path(\"watch/\", include(\"watchlist_app.api.urls\")),\n    # path('api-auth/', include('rest_framework.urls')),\n    path('account/', include('user_app.api.urls')),\n]",
        "detail": "core.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "core.wsgi",
        "description": "core.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "core.wsgi",
        "documentation": {}
    },
    {
        "label": "RegisterUserSerializer",
        "kind": 6,
        "importPath": "user_app.api.serializers",
        "description": "user_app.api.serializers",
        "peekOfCode": "class RegisterUserSerializer(serializers.ModelSerializer):\n    password2 = serializers.CharField(style={'input_type':'password'},write_only=True)\n    class Meta:\n        model = User\n        fields = ['username','email','password','password2']\n        extra_kwargs = {\n            'password':{'write_only':True}\n        }\n    def save(self):\n        password = self.validated_data['password']",
        "detail": "user_app.api.serializers",
        "documentation": {}
    },
    {
        "label": "register_user",
        "kind": 2,
        "importPath": "user_app.api.views",
        "description": "user_app.api.views",
        "peekOfCode": "def register_user(request):\n    if request.method == 'POST':\n        serializer = RegisterUserSerializer(data=request.data)\n        data ={}\n        if serializer.is_valid():\n            account=serializer.save()\n            data['response']=\"Registration Successful!\"\n            data['username']=account.username\n            data['email']=account.email\n            # token = Token.objects.get(user=account).key",
        "detail": "user_app.api.views",
        "documentation": {}
    },
    {
        "label": "logout_view",
        "kind": 2,
        "importPath": "user_app.api.views",
        "description": "user_app.api.views",
        "peekOfCode": "def logout_view(request):\n    if request.method == 'POST':\n        request.user.auth_token.delete()\n        return Response(status=status.HTTP_200_OK)",
        "detail": "user_app.api.views",
        "documentation": {}
    },
    {
        "label": "UserAppConfig",
        "kind": 6,
        "importPath": "user_app.apps",
        "description": "user_app.apps",
        "peekOfCode": "class UserAppConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"user_app\"",
        "detail": "user_app.apps",
        "documentation": {}
    },
    {
        "label": "create_auth_token",
        "kind": 2,
        "importPath": "user_app.models",
        "description": "user_app.models",
        "peekOfCode": "def create_auth_token(sender, instance=None, created=False, **kwargs):\n    if created:\n        Token.objects.create(user=instance)",
        "detail": "user_app.models",
        "documentation": {}
    },
    {
        "label": "IsAdminOrReadOnly",
        "kind": 6,
        "importPath": "watchlist_app.api.permissions",
        "description": "watchlist_app.api.permissions",
        "peekOfCode": "class IsAdminOrReadOnly(permissions.IsAdminUser):\n    def has_permission(self, request, view):\n        if request.method in permissions.SAFE_METHODS:\n            return True\n        else:\n            return bool(request.user and request.user.is_staff)\nclass IsReviewUserOrReadOnly(permissions.BasePermission):\n    def has_object_permission(self, request, view, obj):\n        if request.method in permissions.SAFE_METHODS:\n            return True",
        "detail": "watchlist_app.api.permissions",
        "documentation": {}
    },
    {
        "label": "IsReviewUserOrReadOnly",
        "kind": 6,
        "importPath": "watchlist_app.api.permissions",
        "description": "watchlist_app.api.permissions",
        "peekOfCode": "class IsReviewUserOrReadOnly(permissions.BasePermission):\n    def has_object_permission(self, request, view, obj):\n        if request.method in permissions.SAFE_METHODS:\n            return True\n        else:\n            return obj.review_user == request.user or request.user.is_staff",
        "detail": "watchlist_app.api.permissions",
        "documentation": {}
    },
    {
        "label": "ReviewSerializer",
        "kind": 6,
        "importPath": "watchlist_app.api.serializers",
        "description": "watchlist_app.api.serializers",
        "peekOfCode": "class ReviewSerializer(serializers.ModelSerializer):\n    review_user= serializers.StringRelatedField(read_only=True)\n    class Meta:\n        model= Review\n        exclude=('watchlist',)\nclass WatchListSerializer(serializers.ModelSerializer):\n    reviews= ReviewSerializer(many=True, read_only=True)\n    class Meta:\n        model = WatchList\n        fields = \"__all__\"",
        "detail": "watchlist_app.api.serializers",
        "documentation": {}
    },
    {
        "label": "WatchListSerializer",
        "kind": 6,
        "importPath": "watchlist_app.api.serializers",
        "description": "watchlist_app.api.serializers",
        "peekOfCode": "class WatchListSerializer(serializers.ModelSerializer):\n    reviews= ReviewSerializer(many=True, read_only=True)\n    class Meta:\n        model = WatchList\n        fields = \"__all__\"\nclass StreamPlatformSerializer(serializers.ModelSerializer):\n    watchlist=WatchListSerializer(many=True,read_only=True)\n    class Meta:\n        model = StreamPlatform\n        fields = \"__all__\"",
        "detail": "watchlist_app.api.serializers",
        "documentation": {}
    },
    {
        "label": "StreamPlatformSerializer",
        "kind": 6,
        "importPath": "watchlist_app.api.serializers",
        "description": "watchlist_app.api.serializers",
        "peekOfCode": "class StreamPlatformSerializer(serializers.ModelSerializer):\n    watchlist=WatchListSerializer(many=True,read_only=True)\n    class Meta:\n        model = StreamPlatform\n        fields = \"__all__\"",
        "detail": "watchlist_app.api.serializers",
        "documentation": {}
    },
    {
        "label": "ReviewList",
        "kind": 6,
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "peekOfCode": "class ReviewList(generics.ListAPIView):\n    serializer_class = ReviewSerializer\n    permission_classes =[IsAuthenticated ]\n    def get_queryset(self):\n        pk = self.kwargs[\"pk\"]\n        return Review.objects.filter(watchlist=pk)\nclass ReviewDetail(generics.RetrieveUpdateDestroyAPIView):\n    queryset = Review.objects.all()\n    serializer_class = ReviewSerializer\n    permission_classes=[IsReviewUserOrReadOnly]",
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "ReviewDetail",
        "kind": 6,
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "peekOfCode": "class ReviewDetail(generics.RetrieveUpdateDestroyAPIView):\n    queryset = Review.objects.all()\n    serializer_class = ReviewSerializer\n    permission_classes=[IsReviewUserOrReadOnly]\nclass ReviewCreate(generics.CreateAPIView):\n    serializer_class = ReviewSerializer\n    def get_queryset(self):\n        return Review.objects.all()\n    def perform_create(self, serializer):\n        pk = self.kwargs[\"pk\"]",
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "ReviewCreate",
        "kind": 6,
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "peekOfCode": "class ReviewCreate(generics.CreateAPIView):\n    serializer_class = ReviewSerializer\n    def get_queryset(self):\n        return Review.objects.all()\n    def perform_create(self, serializer):\n        pk = self.kwargs[\"pk\"]\n        watchlist = WatchList.objects.get(pk=pk)\n        review_user = self.request.user\n        review_queryset=Review.objects.filter(review_user=review_user,watchlist=watchlist)\n        if review_queryset.exists():",
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "WatchListAV",
        "kind": 6,
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "peekOfCode": "class WatchListAV(APIView):\n    permission_classes = [IsAdminOrReadOnly]\n    def get(self, request):\n        movies = WatchList.objects.all()\n        serializer = WatchListSerializer(movies, many=True)\n        return Response(serializer.data)\n    def post(self, request):\n        serializer = WatchListSerializer(data=request.data)\n        if serializer.is_valid():\n            serializer.save()",
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "WatchDetailAV",
        "kind": 6,
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "peekOfCode": "class WatchDetailAV(APIView):\n    permission_classes = [IsAdminOrReadOnly]\n    def get(self, request, pk):\n        try:\n            movie = WatchList.objects.get(pk=pk)\n        except WatchList.DoesNotExist:\n            return Response({\"error\": \"Not found\"}, status=status.HTTP_400_BAD_REQUEST)\n        serializer = WatchListSerializer(movie)\n        return Response(serializer.data)\n    def put(self, request, pk):",
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "StreamPlatformVS",
        "kind": 6,
        "importPath": "watchlist_app.api.views",
        "description": "watchlist_app.api.views",
        "peekOfCode": "class StreamPlatformVS(viewsets.ModelViewSet):\n    queryset = StreamPlatform.objects.all()\n    serializer_class = StreamPlatformSerializer\n    permission_classes = [IsAdminOrReadOnly]\n# class StreamPlatformVS(viewsets.ViewSet):\n#     def list(self, request):\n#         queryset = StreamPlatform.objects.all()\n#         serializer = StreamPlatformSerializer(queryset, many=True)\n#         return Response(serializer.data)\n#     def retrieve(self, request, pk=None):",
        "detail": "watchlist_app.api.views",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "watchlist_app.migrations.0001_initial",
        "description": "watchlist_app.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = []\n    operations = [\n        migrations.CreateModel(\n            name=\"Movie\",\n            fields=[\n                (\n                    \"id\",\n                    models.BigAutoField(",
        "detail": "watchlist_app.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "watchlist_app.migrations.0002_streamplatform_watchlist_delete_movie",
        "description": "watchlist_app.migrations.0002_streamplatform_watchlist_delete_movie",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"watchlist_app\", \"0001_initial\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"StreamPlatform\",\n            fields=[\n                (\n                    \"id\",",
        "detail": "watchlist_app.migrations.0002_streamplatform_watchlist_delete_movie",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "watchlist_app.migrations.0003_rename_description_watchlist_storyline_and_more",
        "description": "watchlist_app.migrations.0003_rename_description_watchlist_storyline_and_more",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"watchlist_app\", \"0002_streamplatform_watchlist_delete_movie\"),\n    ]\n    operations = [\n        migrations.RenameField(\n            model_name=\"watchlist\",\n            old_name=\"description\",\n            new_name=\"storyline\",\n        ),",
        "detail": "watchlist_app.migrations.0003_rename_description_watchlist_storyline_and_more",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "watchlist_app.migrations.0004_review",
        "description": "watchlist_app.migrations.0004_review",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"watchlist_app\", \"0003_rename_description_watchlist_storyline_and_more\"),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name=\"Review\",\n            fields=[\n                (\n                    \"id\",",
        "detail": "watchlist_app.migrations.0004_review",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "watchlist_app.migrations.0005_review_review_user_alter_review_watchlist",
        "description": "watchlist_app.migrations.0005_review_review_user_alter_review_watchlist",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"watchlist_app\", \"0004_review\"),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"review\",\n            name=\"review_user\",\n            field=models.ForeignKey(",
        "detail": "watchlist_app.migrations.0005_review_review_user_alter_review_watchlist",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "watchlist_app.migrations.0006_watchlist_avg_rating_watchlist_number_rating",
        "description": "watchlist_app.migrations.0006_watchlist_avg_rating_watchlist_number_rating",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        (\"watchlist_app\", \"0005_review_review_user_alter_review_watchlist\"),\n    ]\n    operations = [\n        migrations.AddField(\n            model_name=\"watchlist\",\n            name=\"avg_rating\",\n            field=models.FloatField(default=0),\n        ),",
        "detail": "watchlist_app.migrations.0006_watchlist_avg_rating_watchlist_number_rating",
        "documentation": {}
    },
    {
        "label": "WatchlistAppConfig",
        "kind": 6,
        "importPath": "watchlist_app.apps",
        "description": "watchlist_app.apps",
        "peekOfCode": "class WatchlistAppConfig(AppConfig):\n    default_auto_field = \"django.db.models.BigAutoField\"\n    name = \"watchlist_app\"",
        "detail": "watchlist_app.apps",
        "documentation": {}
    },
    {
        "label": "StreamPlatform",
        "kind": 6,
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "peekOfCode": "class StreamPlatform(models.Model):\n    name = models.CharField(max_length=50)\n    about = models.TextField(max_length=360)\n    website = models.URLField(max_length=255)\n    def __str__(self):\n        return self.name\nclass WatchList(models.Model):\n    title = models.CharField(max_length=50)\n    storyline = models.TextField(max_length=360)\n    active = models.BooleanField(default=True)",
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "WatchList",
        "kind": 6,
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "peekOfCode": "class WatchList(models.Model):\n    title = models.CharField(max_length=50)\n    storyline = models.TextField(max_length=360)\n    active = models.BooleanField(default=True)\n    created = models.DateTimeField(auto_now_add=True)\n    platform=models.ForeignKey(StreamPlatform, on_delete=models.CASCADE, related_name=\"watchlist\")\n    avg_rating = models.FloatField(default=0)\n    number_rating =models.FloatField(default=0)\n    def __str__(self):\n        return self.title",
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "Review",
        "kind": 6,
        "importPath": "watchlist_app.models",
        "description": "watchlist_app.models",
        "peekOfCode": "class Review(models.Model):\n    review_user = models.ForeignKey(User, on_delete=models.CASCADE)\n    rating = models.IntegerField(validators=[MinValueValidator(1),MaxValueValidator(5)])\n    description = models.CharField(max_length=200,null=True)\n    watchlist=models.ForeignKey(WatchList, on_delete=models.CASCADE, related_name=\"reviews\")\n    active=models.BooleanField(default=True)\n    created=models.DateTimeField(auto_now_add=True)\n    update=models.DateTimeField(auto_now=True)\n    def __str__(self):\n        return str(self.rating)",
        "detail": "watchlist_app.models",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "manage",
        "description": "manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault(\"DJANGO_SETTINGS_MODULE\", \"core.settings\")\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "manage",
        "documentation": {}
    }
]